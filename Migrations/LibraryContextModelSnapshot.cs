// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using librarySampleMVC.Data;

#nullable disable

namespace librarySampleMVC.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("librarySampleMVC.Models.BookGroups", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BooksID")
                        .HasColumnType("int");

                    b.Property<int>("GroupsID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BooksID");

                    b.HasIndex("GroupsID");

                    b.ToTable("BookGroups");
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PublisherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shabak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("publisherId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("publisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "نویسنده اول",
                            Name = "کتاب اول",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2704),
                            Shabak = "123-1-125",
                            publisherId = 5
                        },
                        new
                        {
                            ID = 2,
                            Author = "نویسنده دوم",
                            Name = "کتاب دوم",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2713),
                            Shabak = "123-2-125",
                            publisherId = 1
                        },
                        new
                        {
                            ID = 3,
                            Author = "نویسنده سوم",
                            Name = "کتاب سوم",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2717),
                            Shabak = "123-3-125",
                            publisherId = 3
                        },
                        new
                        {
                            ID = 4,
                            Author = "نویسنده چهارم",
                            Name = "کتاب چهارم",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2725),
                            Shabak = "123-4-125",
                            publisherId = 3
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Comment = "-----",
                            Name = "رمان"
                        },
                        new
                        {
                            ID = 2,
                            Comment = "---",
                            Name = "تخیلی"
                        },
                        new
                        {
                            ID = 3,
                            Comment = "پر فروشترین",
                            Name = "علمی"
                        },
                        new
                        {
                            ID = 4,
                            Comment = "-",
                            Name = "تخصصی"
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Publisher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Comment = "ناشر برتر سال 1400",
                            EstablishmentDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2464),
                            Name = "یاقوت"
                        },
                        new
                        {
                            ID = 2,
                            Comment = "ناشر برتر سال 1401",
                            EstablishmentDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2533),
                            Name = "قلم چی"
                        },
                        new
                        {
                            ID = 3,
                            Comment = "ناشر معمولی",
                            EstablishmentDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2541),
                            Name = "خیلی سبز"
                        },
                        new
                        {
                            ID = 4,
                            Comment = "ناشر مبتدی",
                            EstablishmentDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2546),
                            Name = "بنفشه"
                        },
                        new
                        {
                            ID = 5,
                            Comment = "ناشر غیرفعال",
                            EstablishmentDate = new DateTime(2022, 12, 18, 20, 11, 36, 670, DateTimeKind.Local).AddTicks(2550),
                            Name = "فتح"
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.BookGroups", b =>
                {
                    b.HasOne("librarySampleMVC.Models.Entity.Book", "Books")
                        .WithMany()
                        .HasForeignKey("BooksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("librarySampleMVC.Models.Entity.Group", "Groups")
                        .WithMany()
                        .HasForeignKey("GroupsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Book", b =>
                {
                    b.HasOne("librarySampleMVC.Models.Entity.Publisher", "publisher")
                        .WithMany()
                        .HasForeignKey("publisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("publisher");
                });
#pragma warning restore 612, 618
        }
    }
}
