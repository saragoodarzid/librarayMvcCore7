// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using librarySampleMVC.Data;

#nullable disable

namespace librarySampleMVC.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20221222161216_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PublisherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shabak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("publisherId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("publisherId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "نویسنده اول",
                            Name = "کتاب اول",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4194),
                            Shabak = "123-1-125",
                            publisherId = 5
                        },
                        new
                        {
                            ID = 2,
                            Author = "نویسنده دوم",
                            Name = "کتاب دوم",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4203),
                            Shabak = "123-2-125",
                            publisherId = 1
                        },
                        new
                        {
                            ID = 3,
                            Author = "نویسنده سوم",
                            Name = "کتاب سوم",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4216),
                            Shabak = "123-3-125",
                            publisherId = 3
                        },
                        new
                        {
                            ID = 4,
                            Author = "نویسنده چهارم",
                            Name = "کتاب چهارم",
                            Price = 100000L,
                            PublisherDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4224),
                            Shabak = "123-4-125",
                            publisherId = 3
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.BookGroups", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("bookId")
                        .HasColumnType("int");

                    b.Property<int>("groupId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("bookId");

                    b.HasIndex("groupId");

                    b.ToTable("BookGroups");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            bookId = 1,
                            groupId = 1
                        },
                        new
                        {
                            ID = 2,
                            bookId = 2,
                            groupId = 1
                        },
                        new
                        {
                            ID = 3,
                            bookId = 3,
                            groupId = 1
                        },
                        new
                        {
                            ID = 4,
                            bookId = 1,
                            groupId = 2
                        },
                        new
                        {
                            ID = 5,
                            bookId = 2,
                            groupId = 2
                        },
                        new
                        {
                            ID = 6,
                            bookId = 1,
                            groupId = 3
                        },
                        new
                        {
                            ID = 7,
                            bookId = 1,
                            groupId = 4
                        },
                        new
                        {
                            ID = 8,
                            bookId = 2,
                            groupId = 4
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Comment = "-----",
                            Name = "رمان"
                        },
                        new
                        {
                            ID = 2,
                            Comment = "---",
                            Name = "تخیلی"
                        },
                        new
                        {
                            ID = 3,
                            Comment = "پر فروشترین",
                            Name = "علمی"
                        },
                        new
                        {
                            ID = 4,
                            Comment = "-",
                            Name = "تخصصی"
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Publisher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Comment = "ناشر برتر سال 1400",
                            EstablishmentDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4010),
                            Name = "یاقوت"
                        },
                        new
                        {
                            ID = 2,
                            Comment = "ناشر برتر سال 1401",
                            EstablishmentDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4087),
                            Name = "قلم چی"
                        },
                        new
                        {
                            ID = 3,
                            Comment = "ناشر معمولی",
                            EstablishmentDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4096),
                            Name = "خیلی سبز"
                        },
                        new
                        {
                            ID = 4,
                            Comment = "ناشر مبتدی",
                            EstablishmentDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4105),
                            Name = "بنفشه"
                        },
                        new
                        {
                            ID = 5,
                            Comment = "ناشر غیرفعال",
                            EstablishmentDate = new DateTime(2022, 12, 22, 19, 42, 15, 820, DateTimeKind.Local).AddTicks(4113),
                            Name = "فتح"
                        });
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.Book", b =>
                {
                    b.HasOne("librarySampleMVC.Models.Entity.Publisher", "publisher")
                        .WithMany()
                        .HasForeignKey("publisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("publisher");
                });

            modelBuilder.Entity("librarySampleMVC.Models.Entity.BookGroups", b =>
                {
                    b.HasOne("librarySampleMVC.Models.Entity.Book", "Book")
                        .WithMany()
                        .HasForeignKey("bookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("librarySampleMVC.Models.Entity.Group", "Group")
                        .WithMany()
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
